class Solution:
    
    def getDistance(self, x, y):
        return x*x + y*y
    
    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:
        heap = []
        heapq.heapify(heap)
        for point in points:
            distance = self.getDistance(point[0], point[1])
            if len(heap) < k:
                heapq.heappush(heap, (-distance, point))
            else:
                if distance > heap[0][0]:
                    heapq.heappushpop(heap, (-distance, point))
        return [x[1] for x in heap]
            
        
        
        
