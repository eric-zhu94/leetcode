class Solution:
    def reorganizeString(self, s: str) -> str:
        seen = {}
        out = [""]
        for char in list(s):
            if char in seen:
                seen[char] +=1
            else:
                seen[char] = 1
        heap = []
        heapq.heapify(heap)
        for key in seen:
            heapq.heappush(heap, [-seen[key], key])
        curlen = 0
        while len(out) - 1 != len(s):
            nextchar = heap[0][1]
            if out[curlen] == nextchar:
                if len(heap) < 2:
                    return ""
                else:
                    first = heapq.heappop(heap)
                    second = heapq.heappop(heap)
                    out.append(second[1])
                    heapq.heappush(heap, first)
                    if second[0] + 1 < 0:
                        heapq.heappush(heap, [second[0] + 1, second[1]])
            else:
                first = heapq.heappop(heap)
                out.append(first[1])
                if first[0] + 1 < 0:
                    heapq.heappush(heap, [first[0] + 1, first[1]])
            curlen +=1
        return "".join(out)

        
